//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Originalmente traduzido por Peter Kieser 
// Simplificado para inglês por Ancyker
//--------------------------------------------------------------
// Nota 1: Valor é uma chave de configuração (on/off, yes/no ou 1/0)
// Nota 2: Valor está em porcentagem (100 significa 100%)
// Nota 3: Valor é um campo de bits. Se nenhuma descrição for dada,
//         assume tipos de unidade (1: Pc, 2: Mob, 4: Pet, 8: Homun, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// A taxa de HP dos MVPs. (Nota 2)
mvp_hp_rate: 50

// A taxa de HP de monstros normais (ou seja, monstros que não são MVPs) (Nota 2)
monster_hp_rate: 100

// Define várias configurações relacionadas à IA dos monstros. (Nota 3)
// 0x0001: Quando ativado, os monstros atualizarão sua célula-alvo a cada x células movidas.
//         (normalmente eles nunca atualizam sua célula-alvo até que estejam a uma célula
//         antes do final de seu caminho. x = monster_chase_refresh, veja abaixo)
// 0x0002: Faz com que o monstro use sua habilidade de "ataque rude" (geralmente teleportando-se) se for
//         atacado e não puder contra-atacar, independentemente de como foi
//         atacado (ex: GrimTooth), caso contrário, seu "ataque rude" só é ativado
//         se não puder alcançar o alvo em combate corpo a corpo (ex: atirando à distância)
// 0x0004: Se não definido, monstros que podem mudar de alvo só o fazem quando atacados dentro de uma
//         distância de [alcance de ataque+1], caso contrário, os monstros podem mudar de alvo e perseguir
//         atacantes à distância. Esta flag também substitui o alvo de 'provocação'.
// 0x0008: Quando definido, os monstros se dispersam assim que perdem seu alvo. Use este modo
//         para tornar muito mais difícil treinar com mobs escondendo-se e coletando-os em um
//         único local (ou seja: treinamento com GrimTooth)
// 0x0010: Se definido, habilidades de monstros definidas para amigos também serão acionadas neles mesmos.
// 0x0020: Quando definido, a IA do monstro é executada para todos os monstros em mapas que
//         têm jogadores neles, em vez de apenas para monstros que estão nas proximidades
//         dos jogadores.
// 0x0040: Quando definido, quando o alvo do monstro muda de mapa ou está fora de vista, o monstro
//         caminhará em direção a warps de NPCs e/ou warps de sacerdotes em seu campo de visão.
//         Ele só caminhará para warps que pode usar e apenas para warps que o tragam de volta
//         à vista do alvo (use com mob_warp abaixo).
// 0x0080: Se não definido, monstros em estado de ataque só mudarão de alvo quando atacados
//         por ataques normais. Defina isso se quiser que os monstros também mudem de alvo quando
//         atingidos por habilidades.
// 0x0100: Quando definido, um monstro escolherá uma habilidade aleatória de sua lista e começará a partir
//         dela em vez de verificar as habilidades em ordem (quando não definido, se um monstro tiver muitas
//         habilidades, as que estão próximas do final raramente serão selecionadas)
// 0x0200: Quando definido, o atraso de reutilização da habilidade de um monstro não será aplicado a todas as entradas da
//         mesma habilidade, mas apenas àquela entrada específica (ex: Monstro tem cura
//         em seis linhas no mob_skill_db, apenas a entrada que é realmente usada
//         receberá o atraso). Isso tornará os monstros mais difíceis, especialmente MVPs.
// 0x0400: Defina isso para fazer com que os monstros tenham um alcance de 9 para todas as habilidades. Caso contrário, eles
//         obedecerão às regras normais de alcance de habilidades.
// 0x0800: Quando definido, monstros que são provocados sempre mudarão o alvo para a
//         pessoa que está provocando, mesmo que normalmente não mudariam de alvo ao serem atacados.
// 0x1000: Quando definido, quando um monstro escolhe uma habilidade mas não pode usá-la porque não há
//         alvo válido no alcance, ele procurará outra habilidade que possa usar.
//         Isso faz com que, por exemplo, o General Supremo use "Espinhos da Terra" no alcance 8-9, enquanto
//         oficialmente ele só usaria depois de já ter usado "Ataque Cego"
//         no alcance 0-7.
// Exemplo: 0x140 -> Perseguir jogadores através de warps + usar habilidades em ordem aleatória.
monster_ai: 0x140

// Com que frequência um monstro deve repensar sua perseguição?
// 0: A cada 100ms (MIN_MOBTHINKTIME)
// 1: A cada célula movida
// x: A cada x células movidas ou uma célula antes do final do caminho de perseguição
// 32 (máximo): Uma célula antes do final do caminho de perseguição (oficial)
// Independentemente desta configuração, um monstro sempre verificará alvos no alcance de ataque.
// Diminua este valor se quiser que os monstros sejam mais reativos durante a perseguição.
// Se você quiser que os monstros atualizem sua célula-alvo durante a perseguição, também precisa habilitar
// monster_ai 0x0001, veja acima. Caso contrário, isso define apenas a quantidade máxima de células
// que os monstros se moverão depois de perderem seu alvo (esconder, sem linha de visão, etc.).
monster_chase_refresh: 32

// Os monstros devem poder ser teleportados (adicione conforme necessário)?
// 0: Desativado.
// 1: Ativar teleporte de monstros quando estão em warps de NPCs
// 2: Ativar teleporte de monstros quando estão em Portais de Warp de Sacerdotes
// 4: Desativar teleporte quando o mapa de destino é um mapa 'nobranch'.
// 8: Ativar teleporte de monstros quando estão em Porta Dimensional
mob_warp: 0

// Define o tempo (em ms) durante o qual os monstros terão sua IA ativa
// depois que todos os jogadores deixarem suas proximidades.
// Mesmo após esse tempo, eles ainda andarão aleatoriamente e usarão habilidades ociosas até
// que todos os jogadores que os viram tenham saído ou até que sejam teleportados, chamados
// ou removidos do mapa de outra forma.
mob_active_time: 0
boss_active_time: 0

// Ajuste do alcance de visão de Monstros e Mascotes (coluna range2 no mob_db) (Nota 2)
view_range_rate: 100

// O Alcance de Perseguição é o mínimo-base de perseguição que um monstro dá antes de desistir
// (desde que o alvo esteja fora do seu campo de visão). Esta é a coluna range3
// no mob_db. (Nota 2)
chase_range_rate: 100

// Qual nível de Olhos de Abutre e Olhos de Serpente os monstros deveriam ter aprendido?
// Oficialmente, os monstros não têm essas habilidades aprendidas, então suas habilidades à distância
// só têm um alcance de 9. Se você colocar um número maior que 0, seu alcance será
// aumentado por esse número.
monster_eye_range_bonus: 0

// Alcance no qual saqueadores procuram por itens (máximo 32)
// Oficial: 12
// Legacy Athena: 10
loot_range: 12

// Alcance no qual monstros assistentes procuram por aliados para ajudar (máximo 32)
// Oficial: 11
// Legacy Athena: 10
assist_range: 11

// Permitir que monstros sejam agressivos e ataquem primeiro? (Nota 1)
monster_active_enable: yes

// Os nomes do mob_db devem substituir os nomes dos monstros especificados nos arquivos de spawn?
// 0: Não
// 1: sempre usar a coluna Name do mob_db (nome do monstro em inglês)
// 2: sempre usar a coluna JName do mob_db (nome original do monstro em kRO)
override_mob_names: 0

// Taxa de atraso de dano do monstro (Nota 1)
// Definir como no/0 é como se eles sempre tivessem resistência.
monster_damage_delay_rate: 100

// Ações de saque de monstros.
// 0 = Monstro consumirá o item.
// 1 = Monstro não consumirá o item.
monster_loot_type: 0

// Como o monstro procura itens no chão para saquear?
// 0: Mais próximo (estilo antigo do Athena)
// 1: Mais antigo no alcance (Oficial)
monster_loot_search_type: 1

// Chance de um monstro usar uma habilidade (Nota 2)
// Taxas mais altas levam a 100% de uso de habilidades de monstros com poucos/nenhum ataque normal.
// Defina como 0 para desativar as habilidades de monstros.
mob_skill_rate: 100

// Ajuste de atraso de habilidade de monstro (Nota 2)
// Depois que um monstro usou uma habilidade, há um atraso antes de poder
// usá-la novamente. Note que habilidades com atraso de 0 não podem ser afetadas por esta
// configuração.
mob_skill_delay: 100

// Taxa de monstros em um mapa, 200 seria o dobro do normal. (Nota 2)
mob_count_rate: 100

// Taxa de respawn de monstros em um mapa. 50 faria com que os monstros reaparecessem duas vezes mais rápido (metade do tempo de atraso) (Nota 2)
// Nota: Isso não afeta monstros com respawn imediato (maioria dos monstros normais)
mob_spawn_delay: 10
plant_spawn_delay: 10
boss_spawn_delay: 10

// O tempo de respawn dos monstros deve ter variância aplicada a ele? (Nota 3)
// Em servidores oficiais, monstros gerados pelo comando boss_monster (principalmente MVPs) têm variância, o comportamento legado do Athena é que a variância é aplicada para todos os monstros.
// 0: Nenhum
// 1: Monstros chefes (oficial)
// 2: Monstros normais
// 3: Todos os monstros (legado Athena)
mob_spawn_variance: 1

// Os mobs não devem aparecer dentro do alcance de visão dos jogadores?
// 0 está desativado, caso contrário, é o número de tentativas antes de desistir 
// e fazer o mob aparecer dentro da visão do jogador de qualquer forma, a menos que o máximo (100) seja usado,
// nesse caso o mob não será gerado, e será tentado novamente em
// 5 segundos.
// NOTA: Isso não tem efeito em mobs que sempre aparecem na mesma célula
// (como ovos de formiga), exceto se você definir para o máximo.
no_spawn_on_player: 0

// As coordenadas de spawn nos arquivos de spawn de mobs devem ser ignoradas? (Nota 1)
// Se definido como yes, todos os monstros terão um local de respawn aleatório em todo o
// mapa, independentemente do que o arquivo de spawn de mobs diz.
force_random_spawn: no

// A célula central de cada monstro deve ser aleatorizada? (Nota 1)
// Oficialmente, no início do servidor, a célula central de cada monstro é definida para uma célula aleatória na área de spawn.
// Cada vez que o monstro aparece, ele aparecerá em uma área ao redor de sua célula central, em vez do
// centro original da definição de spawn. Isso resulta em uma área total de spawn muito maior e uma
// experiência diferente a cada início de servidor.
// Defina isso como "no" se quiser que todos os monstros de um spawn apareçam ao redor do centro original da
// definição de spawn, tornando a área total de spawn muito menor (comportamento antigo do eAthena).
randomize_center_cell: yes

// Os escravos invocados herdam os traços passivos/agressivos de seu mestre?
// 0: Não, mantém o modo original.
// 1: Escravos são sempre agressivos.
// 2: Escravos são sempre passivos.
// 3: Mesmo estado agressivo/passivo do mestre.
// 4: O modo é sobrescrito com o modo do escravo (oficial)
slaves_inherit_mode: 4

// Os escravos invocados têm a mesma velocidade de caminhada que seu mestre?
// Não se aplica às Esferas Marinhas invocadas por um Alquimista
// NOTA: O padrão é 3 para servidores oficiais.
// 0: Nunca.
// 1: Se o mestre pode andar
// 2: Se o mestre não pode andar (mesmo mobs imóveis têm uma entrada
//    de velocidade em seu mob_db)
// 3: Sempre
slaves_inherit_speed: 3

// Os escravos de MVP devem manter seu alvo quando invocados de volta para seu mestre? (Nota 1)
mob_slave_keep_target: yes

// Os escravos devem se teleportar de volta para seu mestre se ficarem muito longe durante a perseguição? (Nota 1)
// Oficialmente, eles podem ser movidos para tão longe de seu mestre quanto você quiser.
slave_stick_with_master: no

// Os escravos devem sempre estar ativos quando seu mestre está ativo? (Nota 1)
// Oficialmente, pode ser que o mestre esteja ativo, mas os escravos não.
slave_active_with_master: no

// Monstros invocados (alquimistas ou monstros invocados por @summon) atacando causarão
// chance de acionar as cartas de autospell do mestre? (Nota 1)
summons_trigger_autospells: yes

// Quando um mob é atacado por outro monstro, o mob retaliará contra o mestre do referido mob em vez do próprio mob?
// NOTA: Mobs invocados são tanto aqueles adquiridos via @summon quanto invocados por Alquimistas
retaliate_to_master: yes

// Se os mobs devem mudar de alvo temporariamente quando uma habilidade aciona uma habilidade de contra-ataque do mob (Nota 1)
// ex: Mob ataca o jogador B, e o jogador A usa uma habilidade C. Se definido como yes e o
// mob tem uma habilidade que é acionada pela habilidade C, então A será o alvo da
// habilidade, caso contrário, B será alvo da habilidade de reação.
mob_changetarget_byskill: no

// Se a classe do monstro for alterada, ele recuperará totalmente o HP? (Nota 1)
monster_class_change_full_recover: yes

// Exibir algumas informações do mob ao lado do nome? (adicione conforme necessário)
// (não funciona em guardiões ou Emperium)
// 1: Exibir HP do mob (formato Hp/MaxHp)
// 2: Exibir HP do mob (formato de porcentagem da vida completa)
// 4: Exibir nível do mob
show_mob_info: 0

// Zeny de mobs
zeny_from_mobs: yes

// Monstros sobem de nível (o monstro subirá de nível cada vez que um jogador for morto e eles ficarão mais fortes)
// A taxa de exp é calculada ((nível do monstro-nível original do monstro)*(exp*(taxa de exp de mobs_level_up/100)))
// NOTA: Não se aplica aos Guardiões de WoE.
mobs_level_up: no
mobs_level_up_exp_rate: 1

// Opções de Mobs Dinâmicos
// Usar mobs dinâmicos? (recomendado para servidores de pequeno a médio porte)
dynamic_mobs: yes

// Remover Mobs mesmo que estejam feridos
mob_remove_damaged: yes

// Atraso antes de remover mobs de mapas vazios (padrão 5 min = 300 segs)
mob_remove_delay: 300000

// Define em quem o evento npc_event do mob é executado quando um mob é morto.
// Tipo 1: No jogador que matou o mob (se morto por um não-jogador, recorre ao tipo 0)
// Tipo 0: No jogador que causou mais dano ao mob.
// NOTA: Isso afeta quem ganha o Castelo quando o Emperium é quebrado. 
mob_npc_event_type: 1

// Tempo em milissegundos para ativar a proteção contra Roubo de Abate
// Defina como 0 para desativá-la.
// Se isso estiver ativado e um jogador estiver usando @noks, o dano de outros jogadores (KS) que não estão no grupo
// será reduzido a 0.
ksprotection: 0

// Se deve ou não gerar o túmulo do MVP.
// Veja http://irowiki.org/wiki/MVP#Gravestone
mvp_tomb_enabled: yes

// Atraso antes que o túmulo do MVP seja gerado.
// Padrão: 9 segundos
mvp_tomb_delay: 9000

// Se o tamanho dos mobs invocados especialmente influencia a experiência, taxas de drop,
// e estatísticas. As taxas serão dobradas para mobs grandes e reduzidas pela metade para os pequenos.
// Isso só é invocado sob o comando 'monster', @monsterbig e @monstersmall. (Nota 1)
// Padrão: no
mob_size_influence: no

// Como um monstro deve ser preso por uma parede de gelo lançada diretamente sobre ele?
// Em servidores oficiais, os monstros só podem sair de uma parede de gelo para o oeste e sul. Se o alvo estiver ao norte ou leste
// deles, eles continuarão tentando persegui-lo, mas falharão ao fazê-lo. Isso os coloca em um loop durante o qual usarão
// habilidades ociosas e de perseguição. Monstros chefes, por outro lado, se comportarão como um monstro preso, não se moverão e usarão
// habilidades ociosas e de ataque rude (quando atacados).
// 0: O monstro não ficará preso na parede de gelo.
// 1: O monstro se comportará como um monstro preso.
// 2-255: Número de loops que um monstro passará pelo comportamento descrito acima antes de se libertar da parede de gelo.
// NOTA: Em alguns servidores, monstros normais podem se libertar após 15-35 segundos, dependendo de sua velocidade. Em outros
// servidores, eles ficarão presos dentro da parede de gelo até que ela expire. Além disso, muitos servidores oficiais (por exemplo, iRO) têm o lançamento
// de parede de gelo completamente bloqueado em todos os mapas que têm monstros chefes.
// Padrão (menos explorável): mob - 75, chefe - 0
// Padrão (mais oficial): mob - 220, chefe - 1
mob_icewall_walk_block: 75
boss_icewall_walk_block: 0

// As barras de HP devem ser mostradas para os monstros?
// Cliente 2012-04-04aRagexeRE ou superior necessário.
monster_hp_bars_info: yes

// Um monstro deve reaparecer e um aviso ser impresso no servidor de mapa quando um monstro não puder se mover por muito tempo?
// Isso pode ser uma jogabilidade legítima (por exemplo, jogadores mantendo um MVP preso dentro de uma parede de gelo), mas se você quiser evitar
// exploits e ser notificado sobre eles, você pode definir isso como yes.
monster_stuck_warning: no

// Taxa na qual os monstros usam suas habilidades ociosas quando não há jogadores por perto (Nota 2)
// Em servidores oficiais, os monstros usam suas habilidades ociosas se já foram avistados uma vez, mesmo que não haja mais jogadores por perto.
// Em servidores de pequeno a médio porte, isso pode fazer com que todos os monstros como ovos e Fabre/Pupa se metamorfoseiem.
// Para desativá-lo, defina como 0.
mob_nopc_idleskill_rate: 100
boss_nopc_idleskill_rate: 100

// Taxa na qual os monstros se movem quando não há jogadores por perto (Nota 2)
// Em servidores oficiais, os monstros sempre se movem se já foram avistados uma vez, mesmo que não haja mais jogadores por perto.
// Para desativá-lo, defina como 0.
mob_nopc_move_rate: 100
boss_nopc_move_rate: 100

// Ao matar um monstro, as conquistas do tipo AG_BATTLE são acionadas para todos no mesmo grupo dentro da área?
// A área é limitada pela configuração de batalha area_size.
achievement_mob_share: no

// Tempo mínimo absoluto de respawn em milissegundos de um monstro.
// Também usado para atrasar o aparecimento de guardiões quando uma guilda não está carregada.
// Padrão (Oficial): 1000
mob_respawn_time: 1000

// Define o tempo (em ms) após o qual um monstro desbloqueia seu alvo quando preso.
// Durante este tempo, os monstros ainda estarão no modo ocioso e usarão habilidades ociosas em alvos aleatórios,
// mas continuarão perseguindo seu alvo original quando não estiverem mais presos.
mob_unlock_time: 2000
