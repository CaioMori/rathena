//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Originalmente traduzido por Peter Kieser 
// Simplificado para inglês por Ancyker
//--------------------------------------------------------------
// Nota 1: Valor é uma chave de configuração (on/off, yes/no ou 1/0)
// Nota 2: Valor está em porcentagem (100 significa 100%)
// Nota 3: O nível máximo das classes está armazenado na tabela de experiência.
//         Veja os arquivos db/exp.txt e db/exp2.txt para alterá-los.
//--------------------------------------------------------------

// Taxa na qual a exp. base é dada. (Nota 2)
base_exp_rate: 1000

// Taxa na qual a exp. de classe é dada. (Nota 2)
job_exp_rate: 1000

// Ative isso para permitir que um jogador suba mais de um nível por abate. (Nota 1)
multi_level_up: yes

// Permitir subida de múltiplos níveis até um certo nível?
// Isso só é ativado se multi_level_up estiver habilitado.
// Padrão: 0 (Ilimitado)
multi_level_up_base: 0
multi_level_up_job: 0

// Definir isso pode limitar a experiência máxima que se pode obter por abate, especificada como
// % da barra de exp atual. (Cada 10 = 1.0%)
// Por exemplo, defina como 500 e não importa quanta exp o monstro dê,
// nunca dará mais do que metade da sua barra de exp atual.
max_exp_gain_rate: 0

// Método de cálculo da experiência ganha ao derrotar um monstro:
// 0 = usa dano dado / dano total como proporção de dano
// 1 = usa dano dado / max_hp como proporção de dano
// 2 = 0 + primeiro atacante conta duas vezes
exp_calc_type: 0

// Aumento de experiência por atacante. Ou seja, cada atacante adicional ao
// monstro faz com que ele dê esta quantidade a mais de experiência
// (ex: 5 pessoas atacam com 25 aqui, +(25*4)% -> +100% exp)
exp_bonus_attacker: 25

// Número máximo de atacantes no qual o bônus de exp é limitado
// (ex: se definido como 5, o bônus máximo é 4*bônus-por-personagem independente do número de atacantes)
exp_bonus_max_attacker: 12

// Taxa de bônus de exp para MVP. (Nota 2)
mvp_exp_rate: 1000

// Taxa de exp base/classe dada por NPCs. (Nota 2)
quest_exp_rate: 1000

// A taxa de exp de classe dada pelo uso da habilidade Curar (100 é igual à quantidade curada, 200 é o dobro.
// O equilíbrio da taxa de exp é melhor usado entre 5 e 10)
heal_exp: 0

// A taxa de exp. que é ganha pelo processo de ressurreição, uma unidade é 0,01%.
// Cálculos de experiência para o valor de experiência * diferença de nível da pessoa ressuscitada / 100 * resurrection_exp/10000 que o jogador ressuscitado pode obter.
resurrection_exp: 0

// A taxa de exp. de classe ao usar desconto e sobretaxa em um NPC
// (em incrementos de 0,01% - 100 é 1%, 10000 é normal, 20000 é o dobro.)
// O cálculo é (dinheiro recebido * nível da habilidade) * shop_exp / 10000.
shop_exp: 10000

// Exp em PVP. Os jogadores ganham exp em mapas PvP
// (Nota: NÃO é exp de jogadores, mas de nivelamento normal)
pvp_exp: yes

// Quando um jogador morre, como devemos penalizá-lo?
// 0 = Sem penalidade.
// 1 = Perder % do nível atual quando morto.
// 2 = Perder % da experiência total quando morto.
death_penalty_type: 0

// Taxa de penalidade de exp. base (Cada 100 é 1% da exp)
death_penalty_base: 10

// Taxa de penalidade de exp. de classe (Cada 100 é 1% da exp)
death_penalty_job: 10

// Quando um jogador morre (para outro jogador), quanto zeny devemos penalizá-lo?
// NOTA: É uma porcentagem do zeny deles, então 100 = 1%
zeny_penalty: 0

// Jogadores no nível máximo base/classe perderão EXP ao morrer?
// 0: Nunca perdem (padrão como no oficial).
// 1: Perdem EXP Base.
// 2: Perdem EXP de Classe.
death_penalty_maxlv: 0

// Exibirá a experiência ganha ao matar um monstro. (Nota 1)
disp_experience: yes

// Exibirá o zeny ganho (de monstros, trocas, etc) (Nota 1)
disp_zeny: yes

// Usar o conteúdo de db/statpoint.txt ao fazer um reset de status e subir de nível? (Nota 1)
// Se não, uma equação será usada que preserva os pontos de status ganhos/perdidos
// por meios externos (ex: compradores/vendedores de pontos de status)
use_statpoint_table: yes

// Usar o conteúdo de db/statpoint.yml ao fazer um reset de status e subir de nível? (Nota 1)
// Se não, uma equação será usada que preserva os pontos de característica ganhos/perdidos
// por meios externos (ex: compradores/vendedores de pontos de característica)
use_traitpoint_table: yes

// Custo de EXP para lançar PR_REDEMPTIO (Nota 2)
exp_cost_redemptio: 1

// Quantos jogadores são necessários para fazer com que a penalidade de EXP do PR_REDEMPTIO se torne 0?
// Se por padrão, o 'exp_cost_redemptio' é 1 (1%) e para cada jogador revivido a penalidade é reduzida para 0,2%,
// significa que 'exp_cost_redemptio_limit' é 5.
exp_cost_redemptio_limit: 5
